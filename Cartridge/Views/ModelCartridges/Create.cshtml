@model Cartridge.Models.ModelCartridge

@{
    ViewData["Title"] = "Добавити картридж";
}

<h1>Добавити модель картриджу</h1>
<hr />
@using (Html.BeginForm("Create", "ModelCartridges", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Name" class="control-label">Назва картриджу</label>
                    <input asp-for="Name" class="form-control" required />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Photo" class="control-label">Фото картриджа</label>
                    <input type="file" id="files" name="files" class="btn" style="color:black" />
                    <span asp-validation-for="Photo" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Description" class="control-label">Опис</label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="Baraban" /> @Html.DisplayNameFor(model => model.Baraban)
                    </label>
                </div>
                <div class="form-group">
                    <input type="submit" value="Добавити" class="btn btn-outline-success" />
                    <a asp-action="Index" class="btn btn-outline-secondary">До списку картриджів</a>
                </div>
            </form>
        </div>
    </div>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>

        function previewImages() {
            linebreak = document.createElement("br");
            var preview = document.querySelector('#preview');
            if (this.files) {
                [].forEach.call(this.files, readAndPreview);
            }
            function readAndPreview(file) {
                if (!/\.(jpe?g|png|gif)$/i.test(file.name)) {
                    $('#files').val('');
                    return alert(file.name + " is not an image");

                } else if (file.size > 4194304) {
                    $('#files').val('');

                    return alert(file.name + "is larger than 4MB");

                } else {
                    var reader = new FileReader();
                    reader.addEventListener("load", function () {
                        var image = new Image();
                        image.height = 100;
                        image.title = file.name;
                        image.src = this.result;
                        preview.append(image.title);
                        preview.appendChild(image);
                    });
                    reader.readAsDataURL(file);
                }
            }
        }
        $(document).on('change', 'input[type="file"][multiple]', function () {
            var $this = $(this);
            $this.clone().insertAfter($this);
            $this.hide();

        });

        $(document).on('change', 'input[type="file"][multiple]', previewImages);

        $(document).ready(() => {
            $("#Code").blur(async () => {
                const code = $("#Code").val();
                const url = '@Url.Action("CheckCartrige", "Cartridges")' + `?code=${code}`;
                const response = await fetch(url);
                if (response.status === 200) {
                    if (!$("#Code").hasClass("is-invalid")) {
                        $("#Code").addClass("is-invalid")
                    }
                } else {
                    if ($("#Code").hasClass("is-invalid")) {
                        $("#Code").removeClass("is-invalid")
                    }
                }
            });
        });

</script>
}
